namespace io.pixelsdb.pixels.retina.util.flat;

table ByteArray {
    bytes : [ubyte];
}

enum ColumnVectorBaseTypeFlat : byte {
    NONE = 0,
    BINARY = 1,
    BYTE = 2,
    DATE = 3,
    DECIMAL = 4,
    DICTIONARY = 5,
    DOUBLE = 6,
    FLOAT = 7,
    INT = 8,
    LONG = 9,
    LONGDECIMAL = 10,
    STRUCT = 11,
    TIME = 12,
    TIMESTAMP = 13,
    VECTOR = 14,
}

table ColumnVectorBaseFlat {
    length : int;
    writeIndex : int;
    memoryUsage : long;
    isRepeating : bool;
    duplicated : bool;
    originVecId : int;
    isNull : [bool];
    noNulls : bool;
    preFlattenIsRepeating : bool;
    preFlattenNoNulls : bool;
}

table BinaryColumnVectorFlat {
    base : ColumnVectorBaseFlat;
    vector : [ByteArray];
    start : [int];
    lens : [int];
    buffer : [byte];
    nextFree : int;
    smallBuffer : [byte];
    smallBufferNextFree : int;
    bufferAllocationCount : int;
}

table ByteColumnVectorFlat {
    base : ColumnVectorBaseFlat;
    vector : [byte];
}

table DateColumnVectorFlat {
    base : ColumnVectorBaseFlat;
    dates : [int];
}

table DecimalColumnVectorFlat {
    base : ColumnVectorBaseFlat;
    vector : [long];
    precision : int;
    scale : int;
}

table DictionaryColumnVectorFlat {
    base : ColumnVectorBaseFlat;
    dictArray : [byte];
    dictOffsets : [int];
    ids : [int];
}

table DoubleColumnVectorFlat {
    base : ColumnVectorBaseFlat;
    vector : [long];
}

table FloatColumnVectorFlat {
    base : ColumnVectorBaseFlat;
    vector : [int];
}

table IntColumnVectorFlat {
    base : ColumnVectorBaseFlat;
    vector : [int];
}

table LongColumnVectorFlat {
    base : ColumnVectorBaseFlat;
    vector : [long];
}

table LongDecimalColumnVectorFlat {
    base : ColumnVectorBaseFlat;
    vector : long;
    precision : int;
    scale : int;
}

table StructColumnVectorFlat {
    base : ColumnVectorBaseFlat;
    fields : [ColumnVectorBaseFlat];
}

table TimeColumnVectorFlat {
    base : ColumnVectorBaseFlat;
    times : [int];
    precision : int;
}

table TimestampColumnVectorFlat {
    base : ColumnVectorBaseFlat;
    precision : int;
    times : [long];
}

table VectorColumnVectorFlat {
    base : ColumnVectorBaseFlat;
    vector : [double];
    dimension : int;
}

union ColumnVectorFlat {
    BinaryColumnVectorFlat,
    ByteColumnVectorFlat,
    DateColumnVectorFlat,
    DecimalColumnVectorFlat,
    DictionaryColumnVectorFlat,
    DoubleColumnVectorFlat,
    FloatColumnVectorFlat,
    IntColumnVectorFlat,
    LongColumnVectorFlat,
    LongDecimalColumnVectorFlat,
    StructColumnVectorFlat,
    TimeColumnVectorFlat,
    TimestampColumnVectorFlat
}

table VectorizedRowBatchFlat {
    numCols : int;
    cols : [ColumnVectorFlat];
    size : int;
    projectionSize : int;
    maxSize : int;
    memoryUsage : long;
    endOfFile : bool;
}