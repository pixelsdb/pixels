/*
 * Copyright 2017-2019 PixelsDB.
 *
 * This file is part of Pixels.
 *
 * Pixels is free software: you can redistribute it and/or modify
 * it under the terms of the Affero GNU General Public License as
 * published by the Free Software Foundation, either version 3 of
 * the License, or (at your option) any later version.
 *
 * Pixels is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * Affero GNU General Public License for more details.
 *
 * You should have received a copy of the Affero GNU General Public
 * License along with Pixels.  If not, see
 * <https://www.gnu.org/licenses/>.
 */

syntax = "proto3";

option java_package = "com.retina.demo";
package retina;

service RetinaService {
  rpc UpdateRecord (UpdateRecordRequest) returns (UpdateRecordResponse);
  rpc InsertRecord (InsertRecordRequest) returns (InsertRecordResponse);
  rpc DeleteRecord (DeleteRecordRequest) returns (DeleteRecordResponse);
  rpc QueryRecords (QueryRecordsRequest) returns (QueryRecordsResponse);
  rpc FinishRecords (QueryAck) returns (ResponseHeader);
  rpc QueryVisibility (QueryVisibilityRequest) returns (QueryVisibilityResponse);
  rpc FinishVisibility (QueryAck) returns (ResponseHeader);
}

// header
message RequestHeader {
  string token = 1;
}

message ResponseHeader {
  string token = 1;
  int32 errorCode = 2; // errorCode == 0 means success
  string errorMsg = 3; // empty if errorCode == 0
}

message Value {
  oneof value {
    sint32 integerValue = 1;
    sint64 longValue = 2;
    double doubleValue = 3;
    string stringValue = 4;
    sint64 timestampValue = 5;
    sint32 dateValue = 6;
    sint32 timeValue = 7;    
  }
}

message UpdateRecordRequest {
  RequestHeader header = 1;
  string schemaName = 2;
  string tableName = 3;
  Value primaryKey = 4;
  sint64 timestamp = 5;
  sint32 pkId = 6;
  repeated Value originalValues = 7;
  repeated Value newValues = 8;
}

message UpdateRecordResponse {
  ResponseHeader header = 1;
}

message InsertRecordRequest {
  RequestHeader header = 1;
  string schemaName = 2;
  string tableName = 3;
  sint64 timestamp = 4;
  sint32 pkId = 5;
  repeated Value values = 7;
}

message InsertRecordResponse {
  ResponseHeader header = 1;
}

message DeleteRecordRequest {
  RequestHeader header = 1;
  string schemaName = 2;
  string tableName = 3;
  sint64 timestamp = 4;
  sint32 pkId = 5;
  Value primaryKey = 6;
}

message DeleteRecordResponse {
  ResponseHeader header = 1;
}

message QueryRecordsRequest {
  RequestHeader header = 1;
  string schemaName = 2;
  string tableName = 3;
  sint32 rgid = 4;  
  sint64 timestamp = 5;
}

message QueryRecordsResponse {
  ResponseHeader header = 1;
  sint64 pos = 2;
}


message QueryVisibilityRequest {
  RequestHeader header = 1;
  string schemaName = 2;
  string tableName = 3;
  sint32 rgid = 4;  
  sint64 timestamp = 5;
}

message QueryVisibilityResponse {
  ResponseHeader header = 1;
  sint64 pos = 2;
}

message QueryAck {
  RequestHeader header = 1;
  sint64 pos = 2;
}