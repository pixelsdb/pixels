/*
 * Copyright 2023 PixelsDB.
 *
 * This file is part of Pixels.
 *
 * Pixels is free software: you can redistribute it and/or modify
 * it under the terms of the Affero GNU General Public License as
 * published by the Free Software Foundation, either version 3 of
 * the License, or (at your option) any later version.
 *
 * Pixels is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * Affero GNU General Public License for more details.
 *
 * You should have received a copy of the Affero GNU General Public
 * License along with Pixels.  If not, see
 * <https://www.gnu.org/licenses/>.
 */

// grpc protocol for pixels-turbo.

syntax = "proto3";

option java_multiple_files = false;
option java_package = "io.pixelsdb.pixels.turbo";
option java_outer_classname = "TurboProto";

package turbo.proto;

// The service definitions for query scheduling in pixels-turbo.
service QueryScheduleService {
  rpc ScheduleQuery (ScheduleQueryRequest) returns (ScheduleQueryResponse);
  rpc FinishQuery (FinishQueryRequest) returns (FinishQueryResponse);
  rpc GetQuerySlots (GetQuerySlotsRequest) returns (GetQuerySlotsResponse);
}

// begin request/response definition for query scheduling service

message ScheduleQueryRequest {
  uint64 transId = 1;
  bool forceMpp = 2;
}

message ScheduleQueryResponse {
  int32 errorCode = 1;
  string executorType = 2;
}

message FinishQueryRequest {
  uint64 transId = 1;
  string executorType = 2;
}

message FinishQueryResponse {
  int32 errorCode = 1;
}

message GetQuerySlotsRequest {
}

message GetQuerySlotsResponse {
  int32 errorCode = 1;
  uint32 MppSlots = 2;
  uint32 CfSlots = 3;
}

// The service definitions for the serverless workers in vHive.
service vHiveWorkerService {
  rpc Process (WorkerRequest) returns (WorkerResponse);
  rpc GetMemory (GetMemoryRequest) returns (GetMemoryResponse);
}

// begin request/response definition for vHive worker services
message WorkerRequest {
  string workerType = 1;
  string json = 2;
}

message WorkerResponse {
  string json = 1;
}

message GetMemoryRequest {
}

message GetMemoryResponse {
  uint64 memoryMB = 1;
}

