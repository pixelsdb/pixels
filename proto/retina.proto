/*
 * Copyright 2024 PixelsDB.
 *
 * This file is part of Pixels.
 *
 * Pixels is free software: you can redistribute it and/or modify
 * it under the terms of the Affero GNU General Public License as
 * published by the Free Software Foundation, either version 3 of
 * the License, or (at your option) any later version.
 *
 * Pixels is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * Affero GNU General Public License for more details.
 *
 * You should have received a copy of the Affero GNU General Public
 * License along with Pixels.  If not, see
 * <https://www.gnu.org/licenses/>.
 */

// grpc protocol for pixels-retina.

syntax = "proto3";

option java_multiple_files = false;
option java_package = "io.pixelsdb.pixels.retina";
option java_outer_classname = "RetinaProto";

package retina.proto;

// RetinaService and its related messages where from retina_service.proto
service RetinaWorkerService {
  rpc DeleteRecord (DeleteRecordRequest) returns (DeleteRecordResponse);
  rpc AddVisibility (AddVisibilityRequest) returns (AddVisibilityResponse);
  rpc QueryVisibility (QueryVisibilityRequest) returns (QueryVisibilityResponse);
  rpc GarbageCollect (GarbageCollectRequest) returns (GarbageCollectResponse);
}

// bitmap
message VisibilityBitmap {
  repeated uint64 bitmap = 1;
}

// header
message RequestHeader {
  string token = 1;
}

message ResponseHeader {
  string token = 1;
  int32 errorCode = 2; // errorCode == 0 means success
  string errorMsg = 3; // empty if errorCode == 0
}

message DeleteRecordRequest {
  RequestHeader header = 1;
  string filePath = 2;
  sint32 rgId = 3;
  sint64 rowId = 4;
  sint64 timestamp = 5;
}

message DeleteRecordResponse {
  ResponseHeader header = 1;
}

message AddVisibilityRequest {
  RequestHeader header = 1;
  string filePath = 2;
}

message AddVisibilityResponse {
  ResponseHeader header = 1;
}

message QueryVisibilityRequest {
  RequestHeader header = 1;
  string filePath = 2;
  repeated sint32 rgIds = 3;
  sint64 timestamp = 4;
}

message QueryVisibilityResponse {
  ResponseHeader header = 1;
  repeated VisibilityBitmap bitmaps = 2;
}

message GarbageCollectRequest {
  RequestHeader header = 1;
  string filePath = 2;
  repeated sint32 rgIds = 3;
  sint64 timestamp = 4;
}

message GarbageCollectResponse {
  ResponseHeader header = 1;
}