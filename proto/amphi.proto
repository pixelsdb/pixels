/*
 * Copyright 2023 PixelsDB.
 *
 * This file is part of Pixels.
 *
 * Pixels is free software: you can redistribute it and/or modify
 * it under the terms of the Affero GNU General Public License as
 * published by the Free Software Foundation, either version 3 of
 * the License, or (at your option) any later version.
 *
 * Pixels is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * Affero GNU General Public License for more details.
 *
 * You should have received a copy of the Affero GNU General Public
 * License along with Pixels.  If not, see
 * <https://www.gnu.org/licenses/>.
 */

// grpc protocol for pixels-amphi.

syntax = "proto3";

option java_multiple_files = false;
option java_package = "io.pixelsdb.pixels.amphi";
option java_outer_classname = "AmphiProto";

package amphi.proto;

// The service definitions for pixels-amphi.
service AmphiService {
  rpc TranspileSql (TranspileSqlRequest) returns (TranspileSqlResponse);
  rpc TrinoQuery (TrinoQueryRequest) returns (TrinoQueryResponse);
  rpc CoordinateQuery (CoordinateQueryRequest) returns (CoordinateQueryResponse);
}

// header
message RequestHeader {
  string token = 1;
}

message ResponseHeader {
  string token = 1;
  int32 errorCode = 2; // errorCode == 0 means success
  string errorMsg = 3; // empty if errorCode == 0
}

// begin request/response definition for rpc services
message TranspileSqlRequest {
  RequestHeader header = 1;
  string sqlStatement = 2;
  string fromDialect = 3;
  string toDialect = 4;
}

message TranspileSqlResponse {
  ResponseHeader header = 1;
  string sqlTranspiled = 2;
}

message TrinoQueryRequest {
  RequestHeader header = 1;
  string trinoUrl = 2;
  int32 trinoPort = 3;
  string catalog = 4;
  string schema = 5;
  string sqlQuery = 6;
}

message TrinoQueryResponse {
  ResponseHeader header = 1;
  string queryResult = 2;
}

message CoordinateQueryRequest {
  RequestHeader header = 1;
  string peerName = 2;
  string schema = 3;
  string sqlStatement = 4;
}

message CoordinateQueryResponse {
  ResponseHeader header = 1;
  bool inCloud = 2; // to be executed on peer side if false
  string queryResult = 3; // empty if inCloud is false
}